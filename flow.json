[
    {
        "id": "28c0b30d711d2196",
        "type": "tab",
        "label": "enroll",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "937379985a2fe9d0",
        "type": "tab",
        "label": "recognition",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "815664ce68c011b9",
        "type": "tab",
        "label": "blacklist",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "70c6d0755742cf43",
        "type": "tab",
        "label": "ESP32 Flow",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9c522be7e1c958f7",
        "type": "tab",
        "label": "Motion Sensor",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "9d5fe8f89613df12",
        "type": "tab",
        "label": "notifications demo",
        "disabled": true,
        "info": "",
        "env": []
    },
    {
        "id": "a508d87e6b255b17",
        "type": "tab",
        "label": "Flow 2",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "21b4bf96e0e5ae64",
        "type": "ui_group",
        "name": "Enroll",
        "tab": "46e3ad3dfdd9b1d9",
        "order": 1,
        "disp": true,
        "width": 11,
        "collapse": false,
        "className": ""
    },
    {
        "id": "46e3ad3dfdd9b1d9",
        "type": "ui_tab",
        "name": "Enroll",
        "icon": "fa-address-book",
        "order": 1,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "925898fa03566e97",
        "type": "ui_group",
        "name": "Press the button to take a snapshot",
        "tab": "7129ce63ebc8b37a",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7129ce63ebc8b37a",
        "type": "ui_tab",
        "name": "AI",
        "icon": "dashboard",
        "order": 3,
        "disabled": true,
        "hidden": true
    },
    {
        "id": "6bae1d625db9373f",
        "type": "ui_base",
        "theme": {
            "name": "theme-dark",
            "lightTheme": {
                "default": "#0094CE",
                "baseColor": "#0094CE",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "darkTheme": {
                "default": "#097479",
                "baseColor": "#00d692",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif",
                "edited": true,
                "reset": false
            },
            "customTheme": {
                "name": "Untitled Theme 1",
                "default": "#4B7930",
                "baseColor": "#4B7930",
                "baseFont": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
            },
            "themeState": {
                "base-color": {
                    "default": "#097479",
                    "value": "#00d692",
                    "edited": true
                },
                "page-titlebar-backgroundColor": {
                    "value": "#00d692",
                    "edited": false
                },
                "page-backgroundColor": {
                    "value": "#111111",
                    "edited": false
                },
                "page-sidebar-backgroundColor": {
                    "value": "#ffffff",
                    "edited": false
                },
                "group-textColor": {
                    "value": "#23ffb9",
                    "edited": false
                },
                "group-borderColor": {
                    "value": "#555555",
                    "edited": false
                },
                "group-backgroundColor": {
                    "value": "#333333",
                    "edited": false
                },
                "widget-textColor": {
                    "value": "#eeeeee",
                    "edited": false
                },
                "widget-backgroundColor": {
                    "value": "#00d692",
                    "edited": false
                },
                "widget-borderColor": {
                    "value": "#333333",
                    "edited": false
                },
                "base-font": {
                    "value": "-apple-system,BlinkMacSystemFont,Segoe UI,Roboto,Oxygen-Sans,Ubuntu,Cantarell,Helvetica Neue,sans-serif"
                }
            },
            "angularTheme": {
                "primary": "indigo",
                "accents": "blue",
                "warn": "red",
                "background": "grey",
                "palette": "light"
            }
        },
        "site": {
            "name": "Intellidoor - AI Door",
            "hideToolbar": "false",
            "allowSwipe": "false",
            "lockMenu": "false",
            "allowTempTheme": "true",
            "dateFormat": "DD/MM/YYYY",
            "sizes": {
                "sx": 48,
                "sy": 48,
                "gx": 6,
                "gy": 6,
                "cx": 6,
                "cy": 6,
                "px": 0,
                "py": 0
            }
        }
    },
    {
        "id": "7194cc2839520ebf",
        "type": "mqtt-broker",
        "name": "",
        "broker": "localhost",
        "port": "1883",
        "clientid": "",
        "autoConnect": true,
        "usetls": false,
        "protocolVersion": "4",
        "keepalive": "60",
        "cleansession": true,
        "birthTopic": "",
        "birthQos": "0",
        "birthPayload": "",
        "birthMsg": {},
        "closeTopic": "",
        "closeQos": "0",
        "closePayload": "",
        "closeMsg": {},
        "willTopic": "",
        "willQos": "0",
        "willPayload": "",
        "willMsg": {},
        "sessionExpiry": ""
    },
    {
        "id": "32d747b3621a802b",
        "type": "ui_tab",
        "name": "Recognition",
        "icon": "fa-check-circle",
        "order": 2,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "8f87ab9d9770bd73",
        "type": "ui_group",
        "name": "Group 1",
        "tab": "32d747b3621a802b",
        "order": 1,
        "disp": true,
        "width": 14
    },
    {
        "id": "793da9c12e3cd047",
        "type": "ui_spacer",
        "z": "28c0b30d711d2196",
        "name": "spacer",
        "group": "8f87ab9d9770bd73",
        "order": 2,
        "width": 8,
        "height": 1
    },
    {
        "id": "58ca3a552f40e59e",
        "type": "ui_spacer",
        "z": "28c0b30d711d2196",
        "name": "spacer",
        "group": "8f87ab9d9770bd73",
        "order": 3,
        "width": 8,
        "height": 1
    },
    {
        "id": "f92ce56f4acc6f6e",
        "type": "ui_spacer",
        "z": "28c0b30d711d2196",
        "name": "spacer",
        "group": "8f87ab9d9770bd73",
        "order": 4,
        "width": 8,
        "height": 1
    },
    {
        "id": "eac6cd17009c3f9f",
        "type": "ui_spacer",
        "z": "28c0b30d711d2196",
        "name": "spacer",
        "group": "8f87ab9d9770bd73",
        "order": 5,
        "width": 8,
        "height": 1
    },
    {
        "id": "297bd2cd75a00999",
        "type": "ui_spacer",
        "z": "28c0b30d711d2196",
        "name": "spacer",
        "group": "8f87ab9d9770bd73",
        "order": 6,
        "width": 8,
        "height": 1
    },
    {
        "id": "4178bf61.05d97",
        "type": "ui_group",
        "name": "File upload",
        "tab": "",
        "order": 4,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "b7b9c830d5a57ddb",
        "type": "ui_group",
        "name": "List Subjects",
        "tab": "46e3ad3dfdd9b1d9",
        "order": 2,
        "disp": true,
        "width": 9,
        "collapse": false,
        "className": ""
    },
    {
        "id": "da7ba9ac.589008",
        "type": "ui_group",
        "name": "Statistics",
        "tab": "a0db01256ec70afa",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false,
        "className": ""
    },
    {
        "id": "7e4c65d6.0419cc",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "12",
        "collapse": false
    },
    {
        "id": "97823618c939942d",
        "type": "ui_tab",
        "name": "Blacklist",
        "icon": "fa-ban",
        "order": 4,
        "disabled": false,
        "hidden": false
    },
    {
        "id": "eb270c1ec3bff226",
        "type": "ui_group",
        "name": "Add",
        "tab": "97823618c939942d",
        "order": 1,
        "disp": true,
        "width": "11",
        "collapse": false,
        "className": ""
    },
    {
        "id": "d8d9b395a1c7a074",
        "type": "ui_group",
        "name": "List Subject",
        "tab": "97823618c939942d",
        "order": 2,
        "disp": true,
        "width": "9",
        "collapse": false,
        "className": ""
    },
    {
        "id": "c33a1024a72aa169",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "2096c0c6.23221",
        "type": "ui_group",
        "name": "Default",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "52c28261d8b95946",
        "type": "ui_spacer",
        "z": "815664ce68c011b9",
        "name": "spacer",
        "group": "21b4bf96e0e5ae64",
        "order": 4,
        "width": 5,
        "height": 1
    },
    {
        "id": "b7f5a335aa711c91",
        "type": "ui_spacer",
        "z": "815664ce68c011b9",
        "name": "spacer",
        "group": "21b4bf96e0e5ae64",
        "order": 5,
        "width": 5,
        "height": 1
    },
    {
        "id": "be81e8f2c08d0959",
        "type": "ui_spacer",
        "z": "815664ce68c011b9",
        "name": "spacer",
        "group": "21b4bf96e0e5ae64",
        "order": 6,
        "width": 5,
        "height": 1
    },
    {
        "id": "f2e52b3469dec7e5",
        "type": "twilioConfig",
        "name": "twilioConfig"
    },
    {
        "id": "a0db01256ec70afa",
        "type": "ui_tab",
        "name": "Statistics",
        "icon": "fa-bar-chart",
        "disabled": false,
        "hidden": false
    },
    {
        "id": "4427621b.554264",
        "type": "ui_group",
        "name": "Crew",
        "tab": "",
        "order": 1,
        "disp": true,
        "width": "6",
        "collapse": false
    },
    {
        "id": "3568749853c0cf5a",
        "type": "base64",
        "z": "28c0b30d711d2196",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 460,
        "y": 200,
        "wires": [
            [
                "0a61f52014dd977a",
                "9f3661803bb7e7d8"
            ]
        ]
    },
    {
        "id": "37828ab24f076a2f",
        "type": "ui_text_input",
        "z": "28c0b30d711d2196",
        "name": "Name",
        "label": "Please fill with the subject name:",
        "tooltip": "",
        "group": "21b4bf96e0e5ae64",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 150,
        "y": 320,
        "wires": [
            [
                "e69d78ed78de2fb6"
            ]
        ]
    },
    {
        "id": "ad53ef90af61256f",
        "type": "ui_button",
        "z": "28c0b30d711d2196",
        "name": "",
        "group": "21b4bf96e0e5ae64",
        "order": 8,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enroll",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 320,
        "wires": [
            [
                "32f8cd53309fdee7"
            ]
        ]
    },
    {
        "id": "0a61f52014dd977a",
        "type": "template",
        "z": "28c0b30d711d2196",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"240px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 680,
        "y": 200,
        "wires": [
            [
                "49b0c7078003672c"
            ]
        ]
    },
    {
        "id": "49b0c7078003672c",
        "type": "ui_template",
        "z": "28c0b30d711d2196",
        "group": "21b4bf96e0e5ae64",
        "name": "capture",
        "order": 7,
        "width": 11,
        "height": 5,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 200,
        "wires": [
            []
        ]
    },
    {
        "id": "32f8cd53309fdee7",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "payload builder",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"image\": flow.get('img'),\n    \"subject_id\": flow.get('name'),\n    \"gallery_name\":\"MyGallery\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 340,
        "wires": [
            [
                "f10dcdf7f6181108",
                "9d192720f1ae279d"
            ]
        ]
    },
    {
        "id": "9d192720f1ae279d",
        "type": "http request",
        "z": "28c0b30d711d2196",
        "name": "Enroll on kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/enroll",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 920,
        "y": 320,
        "wires": [
            [
                "bc5799b97f8ad29c",
                "9b9726660702118b"
            ]
        ]
    },
    {
        "id": "f10dcdf7f6181108",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 440,
        "wires": []
    },
    {
        "id": "9f3661803bb7e7d8",
        "type": "change",
        "z": "28c0b30d711d2196",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "img",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "e69d78ed78de2fb6",
        "type": "change",
        "z": "28c0b30d711d2196",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 480,
        "wires": [
            []
        ]
    },
    {
        "id": "bc5799b97f8ad29c",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 380,
        "wires": []
    },
    {
        "id": "bad002328d743ec8",
        "type": "ui_webcam",
        "z": "28c0b30d711d2196",
        "name": "",
        "group": "21b4bf96e0e5ae64",
        "order": 2,
        "width": 6,
        "height": 5,
        "countdown": false,
        "autoStart": true,
        "hideCaptureButton": false,
        "showImage": -1,
        "mirror": true,
        "format": "png",
        "x": 280,
        "y": 200,
        "wires": [
            [
                "3568749853c0cf5a"
            ]
        ]
    },
    {
        "id": "2147099ddde1fccf",
        "type": "ui_text",
        "z": "28c0b30d711d2196",
        "group": "21b4bf96e0e5ae64",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "ResultMessage",
        "label": "",
        "format": "{{msg.resultMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1340,
        "y": 320,
        "wires": []
    },
    {
        "id": "9b9726660702118b",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "",
        "func": "if(msg.statusCode == 200) {\n    msg.resultMessage = \"Successfully enrolled\"\n} else {\n    msg.resultMessage = \"Error while enrolling\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 320,
        "wires": [
            [
                "2147099ddde1fccf",
                "2e90682e159b28b3"
            ]
        ]
    },
    {
        "id": "219c51e1d2db1345",
        "type": "base64",
        "z": "28c0b30d711d2196",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 460,
        "y": 140,
        "wires": [
            [
                "9f3661803bb7e7d8",
                "0a61f52014dd977a"
            ]
        ]
    },
    {
        "id": "6027a31777bc48c8",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "payload view gallery builder",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"gallery_name\":\"MyGallery\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 640,
        "wires": [
            [
                "4cf940731251135b",
                "240ecbe24bd9f451"
            ]
        ]
    },
    {
        "id": "4cf940731251135b",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 680,
        "wires": []
    },
    {
        "id": "240ecbe24bd9f451",
        "type": "http request",
        "z": "28c0b30d711d2196",
        "name": "Gallery view Kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/gallery/view",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 620,
        "wires": [
            [
                "c5864a707b3d0f91",
                "f1f1154e539f2728"
            ]
        ]
    },
    {
        "id": "c5864a707b3d0f91",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload.subject_ids",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 680,
        "wires": []
    },
    {
        "id": "664b15cc4b47ec09",
        "type": "inject",
        "z": "28c0b30d711d2196",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 640,
        "wires": [
            [
                "6027a31777bc48c8"
            ]
        ]
    },
    {
        "id": "f1f1154e539f2728",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "",
        "func": "const subjectObj = []\nfor (var subject of msg.payload.subject_ids) {\n    subjectObj.push({\n        \"title\": subject,\n        \"menu\": [\"Remove\"]\n    })\n}\nmsg.payload = subjectObj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 620,
        "wires": [
            [
                "e976d5466ec9cf5f",
                "b577f6f8f1a2c57e"
            ]
        ]
    },
    {
        "id": "b577f6f8f1a2c57e",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 680,
        "wires": []
    },
    {
        "id": "2e90682e159b28b3",
        "type": "link out",
        "z": "28c0b30d711d2196",
        "name": "New Enroll Update",
        "mode": "link",
        "links": [
            "2bfaea2d3e8746d8"
        ],
        "x": 1275,
        "y": 360,
        "wires": []
    },
    {
        "id": "2bfaea2d3e8746d8",
        "type": "link in",
        "z": "28c0b30d711d2196",
        "name": "New Enroll Update",
        "links": [
            "2e90682e159b28b3",
            "7181aa9c72a8fe77"
        ],
        "x": 315,
        "y": 600,
        "wires": [
            [
                "6027a31777bc48c8"
            ]
        ]
    },
    {
        "id": "939205fe5f0f19cd",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "payload delete enroll",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"gallery_name\": \"MyGallery\",\n    \"subject_id\": msg.payload.title\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 800,
        "wires": [
            [
                "a36508e91e47c04c",
                "e7b56ab1409663b8"
            ]
        ]
    },
    {
        "id": "a36508e91e47c04c",
        "type": "http request",
        "z": "28c0b30d711d2196",
        "name": "Gallery Remove Subject",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/gallery/remove_subject",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 800,
        "wires": [
            [
                "7181aa9c72a8fe77",
                "138ba185152be3e6"
            ]
        ]
    },
    {
        "id": "e65f21275f967970",
        "type": "link in",
        "z": "28c0b30d711d2196",
        "name": "",
        "links": [
            "cc5df389919afe8c"
        ],
        "x": 135,
        "y": 800,
        "wires": [
            [
                "939205fe5f0f19cd"
            ]
        ]
    },
    {
        "id": "cc5df389919afe8c",
        "type": "link out",
        "z": "28c0b30d711d2196",
        "name": "",
        "mode": "link",
        "links": [
            "e65f21275f967970"
        ],
        "x": 1335,
        "y": 620,
        "wires": []
    },
    {
        "id": "e7b56ab1409663b8",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 860,
        "wires": []
    },
    {
        "id": "7181aa9c72a8fe77",
        "type": "link out",
        "z": "28c0b30d711d2196",
        "name": "",
        "mode": "link",
        "links": [
            "2bfaea2d3e8746d8"
        ],
        "x": 895,
        "y": 800,
        "wires": []
    },
    {
        "id": "59007938c8a16d86",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 680,
        "wires": []
    },
    {
        "id": "138ba185152be3e6",
        "type": "debug",
        "z": "28c0b30d711d2196",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 860,
        "wires": []
    },
    {
        "id": "81c88e257befc24b",
        "type": "function",
        "z": "28c0b30d711d2196",
        "name": "",
        "func": "var toDelete = !msg.payload\n\nif(!toDelete) {\n    var buffer = new Buffer(msg.payload, \"binary\");\n    msg.payload = buffer\n    flow.set('file', msg.file.name)\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 280,
        "y": 140,
        "wires": [
            [
                "219c51e1d2db1345"
            ]
        ]
    },
    {
        "id": "9cceaf3094fb63a8",
        "type": "ui_template",
        "z": "28c0b30d711d2196",
        "group": "21b4bf96e0e5ae64",
        "name": "fileInput",
        "order": 3,
        "width": 5,
        "height": 2,
        "format": "<div class=\"fileContainer\">\n    <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" />\n    <label for=\"file\">Upload File</label>\n    <p style=\"margin:auto\" id=\"fileName\"></p>\n    <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"clear()\"> \n       <ng-md-icon style=\"color: #fff;\" icon=\"clear\">\n            <md-tooltip md-direction=\"bottom\">CLEAR</md-tooltip>\n        </ng-md-icon>\n    </button> \n</div>\n\n<style>\n    .fileContainer {\n        display: flex;\n    }\n    .inputfile {\n\twidth: 0.1px;\n\theight: 0.1px;\n\topacity: 0;\n\toverflow: hidden;\n\tposition: absolute;\n\tz-index: -1;\n\tborder-radius: 10px;\n}\n\n.inputfile + label {\n    font-size: 1.05em;\n    font-weight: 700;\n    color: white;\n    text-align: center;\n    padding: 5px;\n    width: 60px;\n    background-color: #00d692;\n}\n\n.inputfile:focus + label,\n.inputfile + label:hover {\n    background-color: #00f5a7;\n}\n\n.inputfile + label {\n\tcursor: pointer; /* \"hand\" cursor */\n}\n\n.inputfile:focus + label {\n\toutline: 1px dotted #000;\n\toutline: -webkit-focus-ring-color auto 5px;\n}\n\n.inputfile + label * {\n\tpointer-events: none;\n}\n\n</style>\n\n<script>\n(function(scope) {\n   var fileInput = $('#file')\n   var fileName = $('#fileName')\n   \n   scope.clear = function() {\n       fileInput.val('').trigger('change')\n   }\n   \n   fileInput.on('change', function(event) {\n        var file = fileInput[0].files[0]; \n        \n        fileName.text(file ? file.name : '')\n        \n        if(file) {\n       \n            var reader = new FileReader();\n            reader.readAsBinaryString(file);\n        \n            reader.onload = function() {\n                scope.send({payload: reader.result, file: file.name})\n            };\n            reader.onerror = function() {\n                console.log('Error while reading files');\n            };\n        } else\n            scope.send({payload: null})\n   })\n    \n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 80,
        "y": 140,
        "wires": [
            [
                "81c88e257befc24b"
            ]
        ]
    },
    {
        "id": "e976d5466ec9cf5f",
        "type": "ui_list",
        "z": "28c0b30d711d2196",
        "group": "b7b9c830d5a57ddb",
        "name": "",
        "order": 1,
        "width": 9,
        "height": 13,
        "lineType": "one",
        "actionType": "menu",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1210,
        "y": 620,
        "wires": [
            [
                "cc5df389919afe8c",
                "59007938c8a16d86"
            ]
        ]
    },
    {
        "id": "8824079d5513c5f7",
        "type": "ui_button",
        "z": "937379985a2fe9d0",
        "name": "",
        "group": "8f87ab9d9770bd73",
        "order": 7,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Recognize",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 590,
        "y": 260,
        "wires": [
            [
                "db67dbb099bbf23f"
            ]
        ]
    },
    {
        "id": "8412dcb71f58a598",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "payload builder",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"image\": flow.get('img'),\n    \"gallery_name\":\"MyGallery\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1000,
        "y": 820,
        "wires": [
            [
                "d63fe902703f2ee4",
                "b9f61898abfc363a"
            ]
        ]
    },
    {
        "id": "b9f61898abfc363a",
        "type": "http request",
        "z": "937379985a2fe9d0",
        "name": "Recognize on kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/recognize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1240,
        "y": 820,
        "wires": [
            [
                "1ff5df22af424b56",
                "04c77ee419252c6a"
            ]
        ]
    },
    {
        "id": "d63fe902703f2ee4",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1200,
        "y": 900,
        "wires": []
    },
    {
        "id": "1ff5df22af424b56",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "kairos retunr",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1430,
        "y": 860,
        "wires": []
    },
    {
        "id": "db67dbb099bbf23f",
        "type": "http request",
        "z": "937379985a2fe9d0",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.132.96/capture",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 790,
        "y": 340,
        "wires": [
            [
                "a3d5d5205169efab"
            ]
        ]
    },
    {
        "id": "a3d5d5205169efab",
        "type": "base64",
        "z": "937379985a2fe9d0",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 1000,
        "y": 340,
        "wires": [
            [
                "b69449dbc2296810",
                "457e93720f595191"
            ]
        ]
    },
    {
        "id": "b69449dbc2296810",
        "type": "template",
        "z": "937379985a2fe9d0",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"240px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 1200,
        "y": 340,
        "wires": [
            [
                "1c47b553e1f3f306"
            ]
        ]
    },
    {
        "id": "1c47b553e1f3f306",
        "type": "ui_template",
        "z": "937379985a2fe9d0",
        "group": "8f87ab9d9770bd73",
        "name": "recognition",
        "order": 1,
        "width": 6,
        "height": 5,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1370,
        "y": 340,
        "wires": [
            [
                "b165780716fc8a0b"
            ]
        ]
    },
    {
        "id": "457e93720f595191",
        "type": "change",
        "z": "937379985a2fe9d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "img",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 1100,
        "y": 400,
        "wires": [
            []
        ]
    },
    {
        "id": "99fc544766e89fb0",
        "type": "aedes broker",
        "z": "937379985a2fe9d0",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 130,
        "y": 580,
        "wires": [
            [],
            []
        ]
    },
    {
        "id": "b3535804b51255e3",
        "type": "mqtt in",
        "z": "937379985a2fe9d0",
        "name": "",
        "topic": "/motion",
        "qos": "2",
        "datatype": "auto",
        "broker": "7194cc2839520ebf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 190,
        "y": 480,
        "wires": [
            [
                "53578b8fe051c745",
                "db67dbb099bbf23f",
                "0990ede22e056adc"
            ]
        ]
    },
    {
        "id": "53578b8fe051c745",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 410,
        "y": 480,
        "wires": []
    },
    {
        "id": "d2dccdac55e21355",
        "type": "mqtt out",
        "z": "937379985a2fe9d0",
        "name": "",
        "topic": "/opendoor",
        "qos": "",
        "retain": "",
        "respTopic": "",
        "contentType": "",
        "userProps": "",
        "correl": "",
        "expiry": "",
        "broker": "7194cc2839520ebf",
        "x": 1990,
        "y": 1060,
        "wires": []
    },
    {
        "id": "04c77ee419252c6a",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "",
        "func": "let openDoor = false\nif(msg.statusCode == 200) {\n    \n    if(msg.payload.Errors){\n        msg.resultMessage = msg.payload.Errors[0].Message\n    }\n    else if(msg.payload.images[0].transaction.status === 'failure') {\n        \n        msg.resultMessage = msg.payload.images[0].transaction.message\n    }\n    else if(msg.payload.images[0].candidates){\n        openDoor=true\n        msg.subject = msg.payload.images[0].candidates[0].subject_id\n        msg.log = {\n            'name': msg.subject,\n            'date' : new Date(),\n            'success': 1\n        }\n        msg.resultMessage = `Welcome ${msg.subject}`\n        \n    }\n} else {\n    msg.resultMessage = \"Error doing recognition\"\n}\nmsg.payload = openDoor ? 'open' : 'close'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1520,
        "y": 780,
        "wires": [
            [
                "a2c12ec3f8d457b8",
                "d0ba11d802f9b539",
                "d0b2ad31e947e624"
            ]
        ]
    },
    {
        "id": "10e3febe4c97b2e2",
        "type": "ui_text",
        "z": "937379985a2fe9d0",
        "group": "8f87ab9d9770bd73",
        "order": 9,
        "width": 0,
        "height": 0,
        "name": "ResultMessage",
        "label": "",
        "format": "{{msg.resultMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 2100,
        "y": 780,
        "wires": []
    },
    {
        "id": "a2c12ec3f8d457b8",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "Payload",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1640,
        "y": 700,
        "wires": []
    },
    {
        "id": "b165780716fc8a0b",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "payload to check blacklist",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"image\": flow.get('img'),\n    \"gallery_name\":\"blacklist\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1150,
        "y": 500,
        "wires": [
            [
                "15617f90687b8d25"
            ]
        ]
    },
    {
        "id": "15617f90687b8d25",
        "type": "http request",
        "z": "937379985a2fe9d0",
        "name": "Recognize on kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/recognize",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 1420,
        "y": 500,
        "wires": [
            [
                "b336a56fdfb96f77",
                "72c6c34ef77d78ea"
            ]
        ]
    },
    {
        "id": "b336a56fdfb96f77",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "blacklist payload",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1600,
        "y": 580,
        "wires": []
    },
    {
        "id": "72c6c34ef77d78ea",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "",
        "func": "msg.intruder = false\nif(msg.statusCode == 200) {\n    \n    if(msg.payload.Errors){\n        msg.resultMessage = msg.payload.Errors[0].Message\n    }\n    \n    else if(msg.payload.images[0].candidates){\n        msg.intruder = true\n        msg.subject = msg.payload.images[0].candidates[0].subject_id\n        msg.log = {\n            'name': msg.subject,\n            'date' : new Date(),\n            'success': 0\n        }\n        msg.resultMessage = `ALERT INTRUDER: ${msg.subject}`\n        \n    }else{\n        msg.resultMessage = ''\n    }\n} else {\n    msg.resultMessage = \"Error doing recognition\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1680,
        "y": 520,
        "wires": [
            [
                "80ef371908de58a0",
                "b9ae358e79db58a1",
                "e0923d13a9853c70"
            ]
        ]
    },
    {
        "id": "80ef371908de58a0",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "Blacklist Recon Result",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "resultMessage",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1860,
        "y": 600,
        "wires": []
    },
    {
        "id": "b9ae358e79db58a1",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "intruder",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "intruder",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1890,
        "y": 560,
        "wires": []
    },
    {
        "id": "e0923d13a9853c70",
        "type": "switch",
        "z": "937379985a2fe9d0",
        "name": "is intruder?",
        "property": "intruder",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 1950,
        "y": 500,
        "wires": [
            [
                "4c926aa93ea2b9ed"
            ],
            [
                "8412dcb71f58a598"
            ]
        ]
    },
    {
        "id": "4c926aa93ea2b9ed",
        "type": "link out",
        "z": "937379985a2fe9d0",
        "name": "",
        "mode": "link",
        "links": [
            "27755f823788a149",
            "55918b3c9437abe9",
            "59b146ea97f36ae9"
        ],
        "x": 2135,
        "y": 460,
        "wires": []
    },
    {
        "id": "59b146ea97f36ae9",
        "type": "link in",
        "z": "937379985a2fe9d0",
        "name": "",
        "links": [
            "4c926aa93ea2b9ed",
            "d0ba11d802f9b539"
        ],
        "x": 1905,
        "y": 780,
        "wires": [
            [
                "10e3febe4c97b2e2"
            ]
        ]
    },
    {
        "id": "d0ba11d802f9b539",
        "type": "link out",
        "z": "937379985a2fe9d0",
        "name": "",
        "mode": "link",
        "links": [
            "59b146ea97f36ae9",
            "30d1bff3d3af69f6"
        ],
        "x": 1655,
        "y": 760,
        "wires": []
    },
    {
        "id": "0990ede22e056adc",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "",
        "func": "var data=context.get(\"data\")|| [];\nif(typeof data[0]==\"undefined\" || msg.topic==\"clear\")\n{\n data[0] =0;\n msg.payload=[];\n}\nelse\n data[0] +=1;\nmsg.payload= data[0]\nmsg.topic = \"movement\"\ncontext.set(\"data\",data);\nreturn msg;\n\n",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 580,
        "wires": [
            [
                "a059cc15c7a0cf20"
            ]
        ]
    },
    {
        "id": "a059cc15c7a0cf20",
        "type": "ui_chart",
        "z": "937379985a2fe9d0",
        "name": "",
        "group": "da7ba9ac.589008",
        "order": 1,
        "width": 0,
        "height": 0,
        "label": "Detected Movement",
        "chartType": "line",
        "legend": "false",
        "xformat": "HH:mm:ss",
        "interpolate": "linear",
        "nodata": "",
        "dot": false,
        "ymin": "",
        "ymax": "",
        "removeOlder": 1,
        "removeOlderPoints": "",
        "removeOlderUnit": "3600",
        "cutout": 0,
        "useOneColor": false,
        "useUTC": false,
        "colors": [
            "#1f77b4",
            "#aec7e8",
            "#ff7f0e",
            "#2ca02c",
            "#98df8a",
            "#d62728",
            "#ff9896",
            "#9467bd",
            "#c5b0d5"
        ],
        "outputs": 1,
        "useDifferentColor": false,
        "className": "",
        "x": 710,
        "y": 620,
        "wires": [
            []
        ]
    },
    {
        "id": "c631778079a56268",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "Prepare an e-mail",
        "func": "msg.topic = 'Reconhecimento efetuado com sucesso'\nmsg.payload = `A pessoa com o subject id:  ${msg.subject} foi autorizada a entrar na sala`\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2090,
        "y": 960,
        "wires": [
            [
                "79627a4bbb9ffc13"
            ]
        ]
    },
    {
        "id": "79627a4bbb9ffc13",
        "type": "e-mail",
        "z": "937379985a2fe9d0",
        "server": "smtp-relay.sendinblue.com",
        "port": "587",
        "secure": false,
        "tls": false,
        "name": "hpcla@iscte-iul.pt",
        "dname": "Send an e-mail",
        "x": 2360,
        "y": 960,
        "wires": []
    },
    {
        "id": "47449da1fdf9576a",
        "type": "sms",
        "z": "937379985a2fe9d0",
        "name": "sms",
        "message": "",
        "numbers": "+351916923298",
        "throttle": 1000,
        "twilio": "f2e52b3469dec7e5",
        "x": 2510,
        "y": 380,
        "wires": [
            []
        ]
    },
    {
        "id": "55918b3c9437abe9",
        "type": "link in",
        "z": "937379985a2fe9d0",
        "name": "",
        "links": [
            "4c926aa93ea2b9ed"
        ],
        "x": 2175,
        "y": 380,
        "wires": [
            [
                "df1db4767884d513"
            ]
        ]
    },
    {
        "id": "d0b2ad31e947e624",
        "type": "switch",
        "z": "937379985a2fe9d0",
        "name": "Check if is to open",
        "property": "payload",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "open",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 1,
        "x": 1750,
        "y": 820,
        "wires": [
            [
                "c631778079a56268",
                "d2dccdac55e21355",
                "0b0e663c727122ac"
            ]
        ]
    },
    {
        "id": "df1db4767884d513",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "Prepare a sms",
        "func": "msg.payload = `Foi detetado o seguinte intruso:  ${msg.subject}`\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 2320,
        "y": 380,
        "wires": [
            [
                "47449da1fdf9576a"
            ]
        ]
    },
    {
        "id": "43f741f3091129e9",
        "type": "ui_table",
        "z": "937379985a2fe9d0",
        "group": "da7ba9ac.589008",
        "name": "Accesses",
        "order": 2,
        "width": "12",
        "height": "20",
        "columns": [],
        "outputs": 0,
        "cts": false,
        "x": 620,
        "y": 780,
        "wires": []
    },
    {
        "id": "73db36d8805ae153",
        "type": "function",
        "z": "937379985a2fe9d0",
        "name": "",
        "func": "const logs = global.get(\"logs\")\nlogs.push({\n    \"Name\": msg.subject,\n    \"Status\": msg.log.success === 1 ? 'Safe' : 'Intruder',\n    \"Date\": new Date().toLocaleString()\n})\nmsg.payload = logs\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 340,
        "y": 800,
        "wires": [
            [
                "a770da7f6751659b",
                "43f741f3091129e9"
            ]
        ]
    },
    {
        "id": "27755f823788a149",
        "type": "link in",
        "z": "937379985a2fe9d0",
        "name": "",
        "links": [
            "0b0e663c727122ac",
            "4c926aa93ea2b9ed"
        ],
        "x": 125,
        "y": 820,
        "wires": [
            [
                "73db36d8805ae153",
                "559cbb43a7d5708d"
            ]
        ]
    },
    {
        "id": "d254d98f66b3d8b0",
        "type": "change",
        "z": "937379985a2fe9d0",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "logs",
                "pt": "global",
                "to": "[]",
                "tot": "json"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 310,
        "y": 940,
        "wires": [
            []
        ]
    },
    {
        "id": "e669d635bb7d0dd4",
        "type": "inject",
        "z": "937379985a2fe9d0",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 130,
        "y": 940,
        "wires": [
            [
                "d254d98f66b3d8b0"
            ]
        ]
    },
    {
        "id": "0b0e663c727122ac",
        "type": "link out",
        "z": "937379985a2fe9d0",
        "name": "",
        "mode": "link",
        "links": [
            "27755f823788a149"
        ],
        "x": 1985,
        "y": 860,
        "wires": []
    },
    {
        "id": "559cbb43a7d5708d",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "TABLE INPUT",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "log",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 350,
        "y": 740,
        "wires": []
    },
    {
        "id": "a770da7f6751659b",
        "type": "debug",
        "z": "937379985a2fe9d0",
        "name": "TABLE PAYLOAD",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 720,
        "wires": []
    },
    {
        "id": "d2c51ab7e4ea0161",
        "type": "ui_text_input",
        "z": "815664ce68c011b9",
        "name": "Name",
        "label": "Please fill with the subject name:",
        "tooltip": "",
        "group": "eb270c1ec3bff226",
        "order": 1,
        "width": 0,
        "height": 0,
        "passthru": true,
        "mode": "text",
        "delay": 300,
        "topic": "topic",
        "sendOnBlur": true,
        "topicType": "msg",
        "x": 150,
        "y": 340,
        "wires": [
            [
                "c394b7628859f934"
            ]
        ]
    },
    {
        "id": "c25cca97bfe7e468",
        "type": "ui_button",
        "z": "815664ce68c011b9",
        "name": "",
        "group": "eb270c1ec3bff226",
        "order": 4,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Enroll",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "msg",
        "x": 350,
        "y": 340,
        "wires": [
            [
                "1a069c38d646654f"
            ]
        ]
    },
    {
        "id": "a99df3d7b820347f",
        "type": "template",
        "z": "815664ce68c011b9",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"240px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 680,
        "y": 220,
        "wires": [
            [
                "2874b7f428afd593"
            ]
        ]
    },
    {
        "id": "2874b7f428afd593",
        "type": "ui_template",
        "z": "815664ce68c011b9",
        "group": "eb270c1ec3bff226",
        "name": "capture",
        "order": 3,
        "width": 11,
        "height": 5,
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 860,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "1a069c38d646654f",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "payload builder",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"image\": flow.get('img'),\n    \"subject_id\": flow.get('name'),\n    \"gallery_name\":\"blacklist\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 660,
        "y": 360,
        "wires": [
            [
                "d3f8f3c095fbfe36",
                "217b859f6c9e6ac4"
            ]
        ]
    },
    {
        "id": "217b859f6c9e6ac4",
        "type": "http request",
        "z": "815664ce68c011b9",
        "name": "Enroll on kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/enroll",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 920,
        "y": 340,
        "wires": [
            [
                "6a7a3dd61bc3db19",
                "7d26464614f892fd"
            ]
        ]
    },
    {
        "id": "d3f8f3c095fbfe36",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 790,
        "y": 460,
        "wires": []
    },
    {
        "id": "c78915230db9a165",
        "type": "change",
        "z": "815664ce68c011b9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "img",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "c394b7628859f934",
        "type": "change",
        "z": "815664ce68c011b9",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "name",
                "pt": "flow",
                "to": "payload",
                "tot": "msg"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 260,
        "y": 500,
        "wires": [
            []
        ]
    },
    {
        "id": "6a7a3dd61bc3db19",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 1070,
        "y": 400,
        "wires": []
    },
    {
        "id": "e2adf7b4aa5e2094",
        "type": "ui_text",
        "z": "815664ce68c011b9",
        "group": "eb270c1ec3bff226",
        "order": 5,
        "width": 0,
        "height": 0,
        "name": "ResultMessage",
        "label": "",
        "format": "{{msg.resultMessage}}",
        "layout": "row-spread",
        "className": "",
        "x": 1340,
        "y": 340,
        "wires": []
    },
    {
        "id": "7d26464614f892fd",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "",
        "func": "if(msg.statusCode == 200) {\n    msg.resultMessage = \"Successfully enrolled\"\n} else {\n    msg.resultMessage = \"Error while enrolling\"\n}\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 1140,
        "y": 340,
        "wires": [
            [
                "e2adf7b4aa5e2094",
                "e3f76e156ed6d143"
            ]
        ]
    },
    {
        "id": "b199e80b61d015a4",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "payload view gallery builder",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"gallery_name\":\"blacklist\"\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 660,
        "wires": [
            [
                "16cc50e4686d2da5",
                "44aa0fec98cfac44"
            ]
        ]
    },
    {
        "id": "16cc50e4686d2da5",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 690,
        "y": 700,
        "wires": []
    },
    {
        "id": "44aa0fec98cfac44",
        "type": "http request",
        "z": "815664ce68c011b9",
        "name": "Gallery view Kairos",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/gallery/view",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 730,
        "y": 640,
        "wires": [
            [
                "81eb577de25ca97d",
                "452d8e83ee10c371"
            ]
        ]
    },
    {
        "id": "81eb577de25ca97d",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 890,
        "y": 700,
        "wires": []
    },
    {
        "id": "a4576db2039f7de2",
        "type": "inject",
        "z": "815664ce68c011b9",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "600",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 190,
        "y": 660,
        "wires": [
            [
                "b199e80b61d015a4"
            ]
        ]
    },
    {
        "id": "452d8e83ee10c371",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "",
        "func": "const subjectObj = []\nfor (var subject of msg.payload.subject_ids) {\n    subjectObj.push({\n        \"title\": subject,\n        \"menu\": [\"Remove\"]\n    })\n}\nmsg.payload = subjectObj\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 980,
        "y": 640,
        "wires": [
            [
                "3e3517137e50b2e0",
                "9bf1c0a55bd836b5"
            ]
        ]
    },
    {
        "id": "3e3517137e50b2e0",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1190,
        "y": 700,
        "wires": []
    },
    {
        "id": "e3f76e156ed6d143",
        "type": "link out",
        "z": "815664ce68c011b9",
        "name": "New Enroll Update",
        "mode": "link",
        "links": [
            "50996940418538ab"
        ],
        "x": 1275,
        "y": 380,
        "wires": []
    },
    {
        "id": "50996940418538ab",
        "type": "link in",
        "z": "815664ce68c011b9",
        "name": "New Enroll Update",
        "links": [
            "e3f76e156ed6d143",
            "66b2c5342137a929"
        ],
        "x": 315,
        "y": 620,
        "wires": [
            [
                "b199e80b61d015a4"
            ]
        ]
    },
    {
        "id": "5242ed2c1c55526f",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "payload delete enroll",
        "func": "msg.headers = {};\nmsg.headers['Content-Type'] = 'application/json';\nmsg.headers['app_id'] = '4013890d';\nmsg.headers['app_key'] = '480bc809d9df9b6e8e3feaf3a950a851';\nmsg.payload=\n{\n    \"gallery_name\": \"blacklist\",\n    \"subject_id\": msg.payload.title\n};\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 360,
        "y": 820,
        "wires": [
            [
                "dc8a444ce816074a",
                "2faf691051fccc91"
            ]
        ]
    },
    {
        "id": "dc8a444ce816074a",
        "type": "http request",
        "z": "815664ce68c011b9",
        "name": "Gallery Remove Subject",
        "method": "POST",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "https://api.kairos.com/gallery/remove_subject",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 710,
        "y": 820,
        "wires": [
            [
                "66b2c5342137a929",
                "f8fabfcb232c3790"
            ]
        ]
    },
    {
        "id": "e9ecf4202abf311f",
        "type": "link in",
        "z": "815664ce68c011b9",
        "name": "",
        "links": [
            "bfb1693c1a9dfb13"
        ],
        "x": 135,
        "y": 820,
        "wires": [
            [
                "5242ed2c1c55526f"
            ]
        ]
    },
    {
        "id": "bfb1693c1a9dfb13",
        "type": "link out",
        "z": "815664ce68c011b9",
        "name": "",
        "mode": "link",
        "links": [
            "e9ecf4202abf311f"
        ],
        "x": 1335,
        "y": 640,
        "wires": []
    },
    {
        "id": "2faf691051fccc91",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "true",
        "targetType": "full",
        "statusVal": "",
        "statusType": "auto",
        "x": 550,
        "y": 880,
        "wires": []
    },
    {
        "id": "66b2c5342137a929",
        "type": "link out",
        "z": "815664ce68c011b9",
        "name": "",
        "mode": "link",
        "links": [
            "50996940418538ab"
        ],
        "x": 895,
        "y": 820,
        "wires": []
    },
    {
        "id": "1905b5b869a3e1dd",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1410,
        "y": 700,
        "wires": []
    },
    {
        "id": "f8fabfcb232c3790",
        "type": "debug",
        "z": "815664ce68c011b9",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 910,
        "y": 880,
        "wires": []
    },
    {
        "id": "be56de853fac0885",
        "type": "base64",
        "z": "815664ce68c011b9",
        "name": "",
        "action": "",
        "property": "payload",
        "x": 480,
        "y": 180,
        "wires": [
            [
                "c78915230db9a165",
                "a99df3d7b820347f"
            ]
        ]
    },
    {
        "id": "4ddd54e53c4dfd88",
        "type": "function",
        "z": "815664ce68c011b9",
        "name": "",
        "func": "var toDelete = !msg.payload\n\nif(!toDelete) {\n    var buffer = new Buffer(msg.payload, \"binary\");\n    msg.payload = buffer\n    flow.set('file', msg.file.name)\n}\n\nreturn msg",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 320,
        "y": 180,
        "wires": [
            [
                "be56de853fac0885"
            ]
        ]
    },
    {
        "id": "41f4034f593b0acb",
        "type": "ui_template",
        "z": "815664ce68c011b9",
        "group": "eb270c1ec3bff226",
        "name": "fileInput",
        "order": 2,
        "width": 11,
        "height": 2,
        "format": "<div class=\"fileContainer\">\n    <input type=\"file\" name=\"file\" id=\"file\" class=\"inputfile\" />\n    <label for=\"file\">Upload File</label>\n    <p style=\"margin:auto\" id=\"fileName\"></p>\n    <button class=\"vibrate filled touched smallfont rounded greybuttons\" ng-click=\"clear()\"> \n       <ng-md-icon style=\"color: #fff;\" icon=\"clear\">\n            <md-tooltip md-direction=\"bottom\">CLEAR</md-tooltip>\n        </ng-md-icon>\n    </button> \n</div>\n\n<style>\n    .fileContainer {\n        display: flex;\n    }\n    .inputfile {\n\twidth: 0.1px;\n\theight: 0.1px;\n\topacity: 0;\n\toverflow: hidden;\n\tposition: absolute;\n\tz-index: -1;\n\tborder-radius: 10px;\n}\n\n.inputfile + label {\n    font-size: 1.05em;\n    font-weight: 700;\n    color: white;\n    text-align: center;\n    padding: 5px;\n    width: 60px;\n    background-color: #00d692;\n}\n\n.inputfile:focus + label,\n.inputfile + label:hover {\n    background-color: #00f5a7;\n}\n\n.inputfile + label {\n\tcursor: pointer; /* \"hand\" cursor */\n}\n\n.inputfile:focus + label {\n\toutline: 1px dotted #000;\n\toutline: -webkit-focus-ring-color auto 5px;\n}\n\n.inputfile + label * {\n\tpointer-events: none;\n}\n\n</style>\n\n<script>\n(function(scope) {\n   var fileInput = $('#file')\n   var fileName = $('#fileName')\n   \n   scope.clear = function() {\n       fileInput.val('').trigger('change')\n   }\n   \n   fileInput.on('change', function(event) {\n        var file = fileInput[0].files[0]; \n        \n        fileName.text(file ? file.name : '')\n        \n        if(file) {\n       \n            var reader = new FileReader();\n            reader.readAsBinaryString(file);\n        \n            reader.onload = function() {\n                scope.send({payload: reader.result, file: file.name})\n            };\n            reader.onerror = function() {\n                console.log('Error while reading files');\n            };\n        } else\n            scope.send({payload: null})\n   })\n    \n})(scope);\n</script>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 120,
        "y": 180,
        "wires": [
            [
                "4ddd54e53c4dfd88"
            ]
        ]
    },
    {
        "id": "9bf1c0a55bd836b5",
        "type": "ui_list",
        "z": "815664ce68c011b9",
        "group": "d8d9b395a1c7a074",
        "name": "",
        "order": 1,
        "width": 9,
        "height": 10,
        "lineType": "one",
        "actionType": "menu",
        "allowHTML": false,
        "outputs": 1,
        "topic": "",
        "x": 1210,
        "y": 640,
        "wires": [
            [
                "bfb1693c1a9dfb13"
            ]
        ]
    },
    {
        "id": "5fe2d2104a70ae64",
        "type": "ui_button",
        "z": "70c6d0755742cf43",
        "name": "",
        "group": "925898fa03566e97",
        "order": 4,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Capture Snapshot",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "flow",
        "x": 350,
        "y": 420,
        "wires": [
            [
                "e6a52842589ede17"
            ]
        ]
    },
    {
        "id": "75959b075669a4f3",
        "type": "image",
        "z": "70c6d0755742cf43",
        "name": "",
        "width": 160,
        "data": "payload",
        "dataType": "msg",
        "thumbnail": false,
        "active": false,
        "pass": false,
        "outputs": 0,
        "x": 940,
        "y": 560,
        "wires": []
    },
    {
        "id": "76caf158b4627767",
        "type": "debug",
        "z": "70c6d0755742cf43",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 710,
        "y": 520,
        "wires": []
    },
    {
        "id": "5cf6d0d660f6c4b8",
        "type": "ui_button",
        "z": "70c6d0755742cf43",
        "name": "",
        "group": "925898fa03566e97",
        "order": 5,
        "width": "2",
        "height": "1",
        "passthru": false,
        "label": "Reset Stream",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "className": "",
        "icon": "",
        "payload": "",
        "payloadType": "str",
        "topic": "topic",
        "topicType": "flow",
        "x": 440,
        "y": 260,
        "wires": [
            [
                "2082771a58a26dd3"
            ]
        ]
    },
    {
        "id": "2082771a58a26dd3",
        "type": "change",
        "z": "70c6d0755742cf43",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "streamUrl",
                "pt": "msg",
                "to": "http://192.168.1.10:81/stream",
                "tot": "str"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 690,
        "y": 260,
        "wires": [
            [
                "0b468d9e239adca9",
                "93c1e432d1322425"
            ]
        ]
    },
    {
        "id": "0b468d9e239adca9",
        "type": "debug",
        "z": "70c6d0755742cf43",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "streamUrl",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 920,
        "y": 120,
        "wires": []
    },
    {
        "id": "80cde8783801492f",
        "type": "inject",
        "z": "70c6d0755742cf43",
        "name": "Start Stream",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 450,
        "y": 200,
        "wires": [
            [
                "2082771a58a26dd3"
            ]
        ]
    },
    {
        "id": "93c1e432d1322425",
        "type": "ui_template",
        "z": "70c6d0755742cf43",
        "group": "925898fa03566e97",
        "name": "stream",
        "order": 1,
        "width": "12",
        "height": "8",
        "format": "<div>\n    <img src=\"{{msg.streamUrl}}\" />\n</div>",
        "storeOutMessages": false,
        "fwdInMessages": false,
        "resendOnRefresh": true,
        "templateScope": "local",
        "className": "",
        "x": 950,
        "y": 260,
        "wires": [
            []
        ]
    },
    {
        "id": "97bb93e0ca2a4ef4",
        "type": "inject",
        "z": "70c6d0755742cf43",
        "name": "Start Capture",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payloadType": "date",
        "x": 370,
        "y": 460,
        "wires": [
            [
                "e6a52842589ede17"
            ]
        ]
    },
    {
        "id": "f185c468350b4728",
        "type": "inject",
        "z": "70c6d0755742cf43",
        "name": "",
        "props": [
            {
                "p": "payload",
                "v": "{\"tab\":\"\"}",
                "vt": "json"
            },
            {
                "p": "topic",
                "v": "",
                "vt": "string"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "x": 250,
        "y": 80,
        "wires": [
            [
                "a1a0debca35f0756"
            ]
        ]
    },
    {
        "id": "a1a0debca35f0756",
        "type": "ui_ui_control",
        "z": "70c6d0755742cf43",
        "name": "",
        "events": "all",
        "x": 420,
        "y": 80,
        "wires": [
            []
        ]
    },
    {
        "id": "e6a52842589ede17",
        "type": "http request",
        "z": "70c6d0755742cf43",
        "name": "",
        "method": "GET",
        "ret": "bin",
        "paytoqs": "ignore",
        "url": "http://192.168.1.10/capture",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "senderr": false,
        "x": 550,
        "y": 420,
        "wires": [
            [
                "dcbc29b7bb8f3e73",
                "76caf158b4627767"
            ]
        ]
    },
    {
        "id": "d03860b5cb75b51b",
        "type": "template",
        "z": "70c6d0755742cf43",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "handlebars",
        "syntax": "mustache",
        "template": "<img width=\"320px\" height=\"240px\" src=\"data:image/jpg;base64,{{{payload}}}\">",
        "output": "str",
        "x": 900,
        "y": 420,
        "wires": [
            [
                "32177f6e9bab3f14"
            ]
        ]
    },
    {
        "id": "32177f6e9bab3f14",
        "type": "ui_template",
        "z": "70c6d0755742cf43",
        "group": "925898fa03566e97",
        "name": "capture",
        "order": 3,
        "width": "6",
        "height": "5",
        "format": "<div ng-bind-html=\"msg.payload\"></div>",
        "storeOutMessages": true,
        "fwdInMessages": true,
        "resendOnRefresh": false,
        "templateScope": "local",
        "className": "",
        "x": 1060,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "dcbc29b7bb8f3e73",
        "type": "base64",
        "z": "70c6d0755742cf43",
        "name": "",
        "action": "str",
        "property": "payload",
        "x": 710,
        "y": 420,
        "wires": [
            [
                "d03860b5cb75b51b",
                "75959b075669a4f3",
                "de23e7e839cf59d2"
            ]
        ]
    },
    {
        "id": "de23e7e839cf59d2",
        "type": "debug",
        "z": "70c6d0755742cf43",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 930,
        "y": 520,
        "wires": []
    },
    {
        "id": "b178063dadd8fc8e",
        "type": "aedes broker",
        "z": "9c522be7e1c958f7",
        "name": "",
        "mqtt_port": 1883,
        "mqtt_ws_bind": "port",
        "mqtt_ws_port": "",
        "mqtt_ws_path": "",
        "cert": "",
        "key": "",
        "certname": "",
        "keyname": "",
        "dburl": "",
        "usetls": false,
        "x": 300,
        "y": 280,
        "wires": [
            [
                "84eb1d03af4151fc"
            ],
            []
        ]
    },
    {
        "id": "f102b7e5472ac088",
        "type": "mqtt in",
        "z": "9c522be7e1c958f7",
        "name": "",
        "topic": "#",
        "qos": "2",
        "datatype": "auto",
        "broker": "7194cc2839520ebf",
        "nl": false,
        "rap": true,
        "rh": 0,
        "inputs": 0,
        "x": 360,
        "y": 180,
        "wires": [
            [
                "a6f6827515e24865"
            ]
        ]
    },
    {
        "id": "84eb1d03af4151fc",
        "type": "debug",
        "z": "9c522be7e1c958f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 590,
        "y": 300,
        "wires": []
    },
    {
        "id": "a6f6827515e24865",
        "type": "debug",
        "z": "9c522be7e1c958f7",
        "name": "",
        "active": false,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 580,
        "y": 180,
        "wires": []
    },
    {
        "id": "3eeac3e3969e6f09",
        "type": "inject",
        "z": "9d5fe8f89613df12",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 230,
        "y": 240,
        "wires": [
            [
                "8b97cd7f8994edae"
            ]
        ]
    },
    {
        "id": "8b97cd7f8994edae",
        "type": "function",
        "z": "9d5fe8f89613df12",
        "name": "",
        "func": "msg.topic = 'Teste'\nmsg.payload = 'Teste de body'\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 450,
        "y": 320,
        "wires": [
            [
                "2f4462ac325fea8a",
                "25086fe8f698d269"
            ]
        ]
    },
    {
        "id": "2f4462ac325fea8a",
        "type": "debug",
        "z": "9d5fe8f89613df12",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "false",
        "statusVal": "",
        "statusType": "auto",
        "x": 1040,
        "y": 300,
        "wires": []
    },
    {
        "id": "25086fe8f698d269",
        "type": "e-mail",
        "z": "9d5fe8f89613df12",
        "server": "smtp-relay.sendinblue.com",
        "port": "587",
        "secure": false,
        "tls": false,
        "name": "hpcla@iscte-iul.pt",
        "dname": "",
        "x": 960,
        "y": 200,
        "wires": []
    },
    {
        "id": "53af3f9c210ac903",
        "type": "sms",
        "z": "9d5fe8f89613df12",
        "name": "sms",
        "message": "Tem um intruso a tentar entrar em casa.",
        "numbers": "+351916923298",
        "throttle": 1000,
        "twilio": "f2e52b3469dec7e5",
        "x": 590,
        "y": 420,
        "wires": [
            []
        ]
    },
    {
        "id": "8b2b42fcc6eeb767",
        "type": "inject",
        "z": "9d5fe8f89613df12",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 220,
        "y": 400,
        "wires": [
            [
                "53af3f9c210ac903"
            ]
        ]
    },
    {
        "id": "457f0b8aa213d855",
        "type": "inject",
        "z": "a508d87e6b255b17",
        "name": "",
        "props": [
            {
                "p": "payload"
            },
            {
                "p": "topic",
                "vt": "str"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": 0.1,
        "topic": "",
        "payload": "",
        "payloadType": "date",
        "x": 360,
        "y": 380,
        "wires": [
            [
                "478f99b151fd071c"
            ]
        ]
    },
    {
        "id": "478f99b151fd071c",
        "type": "http request",
        "z": "a508d87e6b255b17",
        "name": "",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "ignore",
        "url": "http://api.open-notify.org/astros.json",
        "tls": "",
        "persist": false,
        "proxy": "",
        "authType": "",
        "x": 560,
        "y": 300,
        "wires": [
            [
                "c7509480bc37dfc6"
            ]
        ]
    },
    {
        "id": "76b0809a51467b2d",
        "type": "debug",
        "z": "a508d87e6b255b17",
        "name": "",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 980,
        "y": 300,
        "wires": []
    },
    {
        "id": "38f8b3dd0b01732d",
        "type": "ui_button",
        "z": "a508d87e6b255b17",
        "name": "",
        "group": "4427621b.554264",
        "order": 2,
        "width": 0,
        "height": 0,
        "passthru": false,
        "label": "Update Crew",
        "tooltip": "",
        "color": "",
        "bgcolor": "",
        "icon": "",
        "payload": "",
        "payloadType": "date",
        "topic": "topic",
        "topicType": "msg",
        "x": 360,
        "y": 240,
        "wires": [
            [
                "478f99b151fd071c"
            ]
        ]
    },
    {
        "id": "77843e04126ac718",
        "type": "ui_table",
        "z": "a508d87e6b255b17",
        "group": "4427621b.554264",
        "name": "Crew",
        "order": 1,
        "width": "6",
        "height": "6",
        "columns": [
            {
                "field": "name",
                "title": "Name",
                "width": "",
                "align": "left",
                "formatter": "plaintext",
                "formatterParams": {
                    "target": "_blank"
                }
            }
        ],
        "outputs": 0,
        "cts": false,
        "x": 960,
        "y": 260,
        "wires": []
    },
    {
        "id": "c7509480bc37dfc6",
        "type": "function",
        "z": "a508d87e6b255b17",
        "name": "Get crew array",
        "func": "msg.payload = msg.payload.people;\nreturn msg;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 770,
        "y": 300,
        "wires": [
            [
                "76b0809a51467b2d",
                "77843e04126ac718",
                "be0c4bf58fc85244"
            ]
        ]
    },
    {
        "id": "7902485a613b2af5",
        "type": "ui_audio",
        "z": "a508d87e6b255b17",
        "name": "",
        "group": "4427621b.554264",
        "voice": "com.apple.speech.synthesis.voice.samantha",
        "always": "",
        "x": 1030,
        "y": 420,
        "wires": []
    },
    {
        "id": "be0c4bf58fc85244",
        "type": "function",
        "z": "a508d87e6b255b17",
        "name": "",
        "func": "var newmsg = {}\nnewmsg.payload = \"Current crew on the International Space Station is\";\nnode.send(newmsg);\nfor (var i = 0; i < msg.payload.length; i++)\n{\n    \n    var name = msg.payload[i].name;\n    newmsg.payload = name;\n    \n    node.send(newmsg);\n    \n}\nreturn null;",
        "outputs": 1,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "x": 860,
        "y": 420,
        "wires": [
            [
                "7902485a613b2af5"
            ]
        ]
    }
]